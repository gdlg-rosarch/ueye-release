#! /usr/bin/env python
 
PACKAGE='ueye'
  
#from driver_base.msg import SensorLevels
from dynamic_reconfigure.msg import SensorLevels
from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

trigger_enum = gen.enum( [gen.const("TGR_AUTO",               int_t, 0,   ""),
                          gen.const("TGR_SOFTWARE",           int_t, 1,   ""),
                          gen.const("TGR_HARDWARE_RISING",    int_t, 2,   ""),
                          gen.const("TGR_HARDWARE_FALLING",   int_t, 3,   ""),
                          gen.const("TGR_L_MASTER_R_RISING",  int_t, 4,   ""),
                          gen.const("TGR_L_MASTER_R_FALLING", int_t, 5,   ""),
                          gen.const("TGR_R_MASTER_L_RISING",  int_t, 6,   ""),
                          gen.const("TGR_R_MASTER_L_FALLING", int_t, 7,   ""),
                         ],"Enum to set trigger mode")

color_enum = gen.enum( [gen.const("COLOR_MONO8",      int_t, 0,   ""),
                        gen.const("COLOR_MONO16",     int_t, 1,   ""),
                        gen.const("COLOR_YUV",        int_t, 2,   ""),
                        gen.const("COLOR_YCbCr",      int_t, 3,   ""),
                        gen.const("COLOR_BGR5",       int_t, 4,   ""),
                        gen.const("COLOR_BGR565",     int_t, 5,   ""),
                        gen.const("COLOR_BGR8",       int_t, 6,   ""),
                        gen.const("COLOR_BGRA8",      int_t, 7,   ""),
                        gen.const("COLOR_BGRY8",      int_t, 8,   ""),
                        gen.const("COLOR_RGB8",       int_t, 9,   ""),
                        gen.const("COLOR_RGBA8",      int_t, 10,  ""),
                        gen.const("COLOR_RGBY8",      int_t, 11,  ""),
                       ],"Enum to set color mode")

#       Name                Type        Reconfiguration level               Description                                     Default  Min    Max
gen.add("config_path",      str_t,      SensorLevels.RECONFIGURE_RUNNING,   "Path to load and store cfg files.",            "")
gen.add("color",            int_t,      SensorLevels.RECONFIGURE_RUNNING,   "Color mode",                                   6,  edit_method = color_enum)
gen.add("trigger",          int_t,      SensorLevels.RECONFIGURE_RUNNING,   "Trigger mode",                                 0,  edit_method = trigger_enum)
gen.add("flash_polarity",   bool_t,     SensorLevels.RECONFIGURE_RUNNING,   "Flash active level.",                          False)
gen.add("flash_delay",      int_t,      SensorLevels.RECONFIGURE_RUNNING,   "Flash delay in microseconds.",                 -5,     -1000,  1000)
gen.add("flash_duration",   int_t,      SensorLevels.RECONFIGURE_RUNNING,   "Flash duration in microseconds.",              2000,   0,      100000)
gen.add("force_streaming",  bool_t,     SensorLevels.RECONFIGURE_RUNNING,   "Force the camera to stream images.",           False)
gen.add("hardware_gamma",   bool_t,     SensorLevels.RECONFIGURE_RUNNING,   "Sets the camera hardware gamma correction.",   True)
gen.add("auto_exposure",    bool_t,     SensorLevels.RECONFIGURE_RUNNING,   "Sets the camera exposure duration to automatic.",False)
gen.add("exposure_time",    double_t,   SensorLevels.RECONFIGURE_RUNNING,   "Sets the camera exposure time (ms)",           5,      0.06,   200)
gen.add("gain_boost",       bool_t,     SensorLevels.RECONFIGURE_RUNNING,   "Enables constant hardware analog boost.",      False)
gen.add("auto_gain",        bool_t,     SensorLevels.RECONFIGURE_RUNNING,   "Sets the image to automatic.",                 False)
gen.add("gain",             int_t,      SensorLevels.RECONFIGURE_RUNNING,   "Sets the image gain",                          100,    100,    400)
gen.add("zoom",             int_t,      SensorLevels.RECONFIGURE_RUNNING,   "The zoom level. (Global binning)",             1,      1,      16)
gen.add("frame_rate",       double_t,   SensorLevels.RECONFIGURE_RUNNING,   "Sets the expected triggering rate ",           30,     1,      240)
gen.add("l_pixel_clock",    int_t,      SensorLevels.RECONFIGURE_RUNNING,   "Left camera pixel clock speed in MHz",         86,     5,      86)
gen.add("r_pixel_clock",    int_t,      SensorLevels.RECONFIGURE_RUNNING,   "Right camera pixel clock speed in MHz",        86,     5,      86)
gen.add("l_frame_id",       str_t,      SensorLevels.RECONFIGURE_RUNNING,   "The optical camera tf frame set in message headers.",  "/left")
gen.add("r_frame_id",       str_t,      SensorLevels.RECONFIGURE_RUNNING,   "The optical camera tf frame set in message headers.",  "/right")

exit(gen.generate(PACKAGE, "ueye", "stereo"))

